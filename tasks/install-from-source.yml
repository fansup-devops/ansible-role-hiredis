---
- name: Ensure hiredis's dependencies are installed (Debian).
  apt: "pkg={{ item }} state=installed"
  with_items:
    - gcc
    - make
    - libc6-dev
  when: ansible_os_family == 'Debian'

- name: Get installed version
  shell: "test -e {{ hiredis_install_path }}/include/hiredis/hiredis.h && (cat {{ hiredis_install_path }}/include/hiredis/hiredis.h | grep -E '^#define HIREDIS_(MAJOR|MINOR|PATCH) ' | sed -n '1,3p' | awk '{print $3}' | xargs echo | sed 's! !.!g')"
  changed_when: false
  failed_when: false
  register: hiredis_installed_version

- name: Force hiredis install if the version numbers do not match
  set_fact:
    hiredis_reinstall_from_source: true
  when: 'hiredis_install_from_source_force_update and (hiredis_installed_version|success and (hiredis_installed_version.stdout | regex_replace("^.*?([0-9\.]+)$", "\\1") | version_compare(hiredis_version, operator="!=")))'

- name: Download hiredis.
  get_url:
    url: "https://github.com/redis/hiredis/archive/{{ hiredis_github_branch }}.tar.gz"
    dest: "{{ workspace }}/hiredis-{{ hiredis_github_archive }}.tar.gz"
  when: hiredis_installed_version|failed or hiredis_reinstall_from_source

- name: Expand hiredis archive.
  unarchive:
    src: "{{ workspace }}/hiredis-{{ hiredis_github_archive }}.tar.gz"
    dest: "{{ workspace }}"
    creates: "{{ workspace }}/hiredis-{{ hiredis_github_archive }}/README.md"
    copy: no
  when: hiredis_installed_version|failed or hiredis_reinstall_from_source

- name: Build hiredis.
  command: >
    make PREFIX={{ hiredis_install_path }} {{ item }}
    chdir={{ workspace }}/hiredis-{{ hiredis_github_archive }}
  with_items:
    - install
  when: hiredis_installed_version|failed or hiredis_reinstall_from_source
  become: yes

- name: Run ldconfig
  shell: ldconfig
  when: hiredis_installed_version|failed or hiredis_reinstall_from_source
  become: yes
